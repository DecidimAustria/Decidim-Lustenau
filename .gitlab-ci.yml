stages:
  #- test
  - deploy

variables:
  APP_NAME:
    description: "The name of the app. The pipeline will push to APP_NAME and APP_NAME-staging"
  LIVE_URL:
    description: "URL of the live/production app"
  STAGING_URL:
    description: "URL of the staging app"
  LIVE_SERVER:
    description: "Dokku server to push the live app to"
  STAGING_SERVER:
    description: "Dokku server to push the staging app to"
  LIVE_BRANCH:
    value: "live"
    description: "Branch to deploy to live environment"
  STAGING_BRANCH:
    value: "staging"
    description: "Branch to deploy to staging environment"

#test:
#  stage: test
#  image: ruby:2.7.5
#  services:
#    - postgres:11-alpine
#  cache:
#    key: ${CI_COMMIT_REF_SLUG}
#    paths:
#      - vendor
#      - node_modules
#  variables:
#    POSTGRES_DB: testdb
#    POSTGRES_USER: postgres
#    POSTGRES_PASSWORD: testooSh0fie
#    DATABASE_URL: postgres://postgres:testooSh0fie@postgres:5432/testdb
#    RAILS_ENV: test
#  before_script:
#    - curl -sL https://deb.nodesource.com/setup_16.x  | bash -
#    - apt-get update
#    - apt-get install -y nodejs apt-utils libssl-dev cmake
#    - gem install bundler -v 2.2.9
#    #- bundle install --path .bundle
#    - bundle install -j $(nproc) --path vendor
#    #- bundle install -j $(nproc) --path vendor/ruby  # Install dependencies into vendor/ruby
#    - npm install -g yarn
#  script:
#    #- cp .env.ci .env
#    #- cp config/database.ci.yml config/database.yml
#    - bundle exec rails db:create db:schema:load || true
#    #- bundle exec rails db:migrate
#    - yarn install --check-files
#    - bundle exec rails assets:precompile
#    # - bundle exec rails test
#    #- bundle exec pronto run -c=origin/master --exit-code

deploy_live:
  image: ilyasemenov/gitlab-ci-git-push
  stage: deploy
  environment:
    name: production
    url: $LIVE_URL
  script:
    - "git-push ssh://dokku@$LIVE_SERVER:22/$APP_NAME"
  rules:
    - if: $CI_COMMIT_REF_NAME == $LIVE_BRANCH && $APP_NAME != "" && $LIVE_URL != "" && $LIVE_SERVER != ""

deploy_staging:
  image: ilyasemenov/gitlab-ci-git-push
  stage: deploy
  environment:
    name: staging
    url: $STAGING_URL
  script:
    - "git-push ssh://dokku@$STAGING_SERVER:22/$APP_NAME-staging"
  rules:
    - if: $CI_COMMIT_REF_NAME == $STAGING_BRANCH && $APP_NAME != "" && $STAGING_URL != "" && $STAGING_SERVER != ""

